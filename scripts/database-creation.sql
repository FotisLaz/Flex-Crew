-- Generate FlexCrew sample database


DROP SCHEMA IF EXISTS "Flex-Crew-v1" CASCADE;
CREATE SCHEMA "Flex-Crew-v1";

-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

-- Drop tables with CASCADE to handle dependencies before recreating them
DROP TABLE IF EXISTS "Flex-Crew-v1"."Project_Employee_Assignments" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Project_Required_Teams" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Projects" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Tokens" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Records" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Issues" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Employees" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Schedules" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Teams" CASCADE;
DROP TABLE IF EXISTS "Flex-Crew-v1"."Issue_statuses" CASCADE;

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Employees"
(
    employee_id serial NOT NULL,
    names character varying(50) NOT NULL,
    first_surname character varying(50) NOT NULL,
    second_surname character varying(50) NOT NULL,
    email character varying(255) NOT NULL,
    image_url character varying(255),
    role character varying(20) NOT NULL,
    password character varying(60) NOT NULL,
    fk_schedule integer,
    fk_team integer,
    fk_managed_team integer,
    CONSTRAINT "Employees_pkey" PRIMARY KEY (employee_id),
    UNIQUE (fk_managed_team),
    UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Schedules"
(
    schedule_id serial NOT NULL,
    name character varying(50) NOT NULL,
    start_time time with time zone NOT NULL,
    end_time time with time zone NOT NULL,
    max_employees integer,
    current_employees integer,
    PRIMARY KEY (schedule_id)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Teams"
(
    team_id serial NOT NULL,
    name character varying(100),
    PRIMARY KEY (team_id),
    UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Records"
(
    record_id serial NOT NULL,
    fk_employee serial NOT NULL,
    created timestamp with time zone NOT NULL,
    fk_schedule serial NOT NULL,
    fk_issue integer,
    PRIMARY KEY (record_id),
    UNIQUE (fk_issue)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Issues"
(
    issue_id serial NOT NULL,
    fk_issue_status serial NOT NULL,
    delay time without time zone,
    description character varying(280),
    PRIMARY KEY (issue_id)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Issue_statuses"
(
    issue_status_id serial NOT NULL,
    name character varying(50) NOT NULL,
    PRIMARY KEY (issue_status_id)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Tokens"
(
    token_id serial NOT NULL,
    token character varying(255) NOT NULL,
    token_type character varying(20) NOT NULL,
    revoked boolean NOT NULL,
    expired boolean NOT NULL,
    fk_employee integer NOT NULL,
    PRIMARY KEY (token_id)
);

ALTER TABLE IF EXISTS "Flex-Crew-v1"."Employees"
    ADD FOREIGN KEY (fk_team)
    REFERENCES "Flex-Crew-v1"."Teams" (team_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Employees"
    ADD FOREIGN KEY (fk_schedule)
    REFERENCES "Flex-Crew-v1"."Schedules" (schedule_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Employees"
    ADD FOREIGN KEY (fk_managed_team)
    REFERENCES "Flex-Crew-v1"."Teams" (team_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Records"
    ADD FOREIGN KEY (fk_employee)
    REFERENCES "Flex-Crew-v1"."Employees" (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Records"
    ADD FOREIGN KEY (fk_issue)
    REFERENCES "Flex-Crew-v1"."Issues" (issue_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Records"
    ADD FOREIGN KEY (fk_schedule)
    REFERENCES "Flex-Crew-v1"."Schedules" (schedule_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Issues"
    ADD FOREIGN KEY (fk_issue_status)
    REFERENCES "Flex-Crew-v1"."Issue_statuses" (issue_status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Flex-Crew-v1"."Tokens"
    ADD FOREIGN KEY (fk_employee)
    REFERENCES "Flex-Crew-v1"."Employees" (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

-- Populate database

TRUNCATE TABLE  "Flex-Crew-v1"."Teams"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Employees"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Issues"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Schedules"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Records"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Issue_statuses"  RESTART IDENTITY CASCADE;
TRUNCATE TABLE  "Flex-Crew-v1"."Tokens" RESTART IDENTITY CASCADE;

-- Truncate new project-related tables before inserting sample data
-- TRUNCATE TABLE  "Flex-Crew-v1"."Projects" RESTART IDENTITY CASCADE;
-- TRUNCATE TABLE  "Flex-Crew-v1"."Project_Required_Teams" RESTART IDENTITY CASCADE;
-- TRUNCATE TABLE  "Flex-Crew-v1"."Project_Employee_Assignments" RESTART IDENTITY CASCADE;

-- Add sample teams
INSERT INTO "Flex-Crew-v1"."Teams"(name)
VALUES ('Development Team'),
    ('Quality Assurance (QA) Team'),
    ('Product Management Team'),
    ('UI/UX Design Team'),
    ('Network and Infrastructure Team'),
    ('Security Team'),
    ('Data Analytics Team'),
    ('Sales and Marketing Team'),
    ('Customer Support Team'),
    ('Research and Development (R&D) Team');
	
-- Add statuses
INSERT INTO "Flex-Crew-v1"."Issue_statuses"(name)
VALUES ('Late'),
	('Early'),
	('Missed'),
	('Blocked'),
	('Punctual');

-- Add schedules
INSERT INTO "Flex-Crew-v1"."Schedules"(name, start_time, end_time, max_employees, current_employees)
VALUES
    ('7:00 - 15:30', '07:00:00-06:00', '15:30:00-06:00', 2, 0),
    ('7:30 - 16:00', '07:30:00-06:00', '16:00:00-06:00', 2, 0),
    ('8:00 - 16:30', '08:00:00-06:00', '16:30:00-06:00', 3, 0),
    ('8:30 - 17:00', '08:30:00-06:00', '17:00:00-06:00', 4, 0),
    ('9:00 - 17:30', '09:00:00-06:00', '17:30:00-06:00', 5, 0),
    ('9:30 - 18:00', '09:30:00-06:00', '18:00:00-06:00', 2, 0),
	('10:00 - 18:30', '09:30:00-06:00', '18:00:00-06:00', 2, 0);

-- Add employees with a default schema
-- Default password: !Dd12345
-- BCrypt hash for !Dd12345: $2a$10$yVS0J2LhQ8MA36L29XlfguA6JzXvJ4R9vBqqR4Uq6VpGmL1l380eS

-- Clear existing employees before inserting new ones
TRUNCATE TABLE "Flex-Crew-v1"."Employees" RESTART IDENTITY CASCADE;

-- Managers (ADMIN Role)
INSERT INTO "Flex-Crew-v1"."Employees"(names, first_surname, second_surname, email, image_url, role, password, fk_schedule, fk_team, fk_managed_team)
VALUES
 	('Jose', 'Smith', 'Smith', 'admin1@example.com', null, 'ADMIN', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 1, 1, 1), -- Manages Development Team
    ('Maria', 'Garcia', 'Martinez', 'admin2@example.com', null, 'ADMIN', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 3, 4, 4), -- Manages UI/UX Design Team
    ('David', 'Rodriguez', 'Lee', 'admin3@example.com', null, 'ADMIN', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 5, 8, 8); -- Manages Sales and Marketing Team

-- Regular Employees (USER Role)
INSERT INTO "Flex-Crew-v1"."Employees"(names, first_surname, second_surname, email, image_url, role, password, fk_schedule, fk_team)
VALUES
    -- Development Team (Team 1)
 	('John', 'Doe', 'Anderson', 'dev1@example.com', 'https://randomuser.me/api/portraits/men/1.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 2, 1),
    ('Jane', 'Smith', 'Miller', 'dev2@example.com', 'https://randomuser.me/api/portraits/women/2.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 2, 1),
    ('Peter', 'Jones', 'Wilson', 'dev3@example.com', 'https://randomuser.me/api/portraits/men/3.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 3, 1),
    -- QA Team (Team 2)
    ('Alice', 'Brown', 'Davis', 'qa1@example.com', 'https://randomuser.me/api/portraits/women/4.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 4, 2),
    ('Bob', 'White', 'Green', 'qa2@example.com', 'https://randomuser.me/api/portraits/men/5.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 4, 2),
    -- UI/UX Design Team (Team 4)
    ('Charlie', 'Black', 'Hall', 'design1@example.com', 'https://randomuser.me/api/portraits/men/6.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 3, 4),
    ('Diana', 'King', 'Scott', 'design2@example.com', 'https://randomuser.me/api/portraits/women/7.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 3, 4),
    -- Sales and Marketing Team (Team 8)
    ('Ethan', 'Baker', 'Adams', 'sales1@example.com', 'https://randomuser.me/api/portraits/men/8.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 5, 8),
    ('Fiona', 'Clark', 'Nelson', 'sales2@example.com', 'https://randomuser.me/api/portraits/women/9.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 5, 8),
    -- Customer Support Team (Team 9)
    ('George', 'Hill', 'Carter', 'support1@example.com', 'https://randomuser.me/api/portraits/men/10.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 6, 9),
    ('Hannah', 'Mitchell', 'Roberts', 'support2@example.com', 'https://randomuser.me/api/portraits/women/11.jpg', 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', 7, 9),
    -- Employee with No Team/Schedule (for testing edge cases)
    ('Ian', 'Turner', 'Phillips', 'noteam@example.com', null, 'USER', '$2a$10$jMydZ82zIQK/ncxNxrldWujvHLfwyISrq8c9nGuk5DXP2awYIT5ny', null, null);

-- New Tables for Project Management and AI-driven Assignment Suggestions

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Projects"
(
    project_id serial NOT NULL,
    name character varying(150) NOT NULL,
    description text,
    status character varying(50) DEFAULT 'OPEN', -- Possible values: 'OPEN', 'PLANNING', 'IN_PROGRESS', 'ON_HOLD', 'COMPLETED', 'CANCELLED'
    creation_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    due_date timestamp with time zone,
    PRIMARY KEY (project_id)
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Project_Required_Teams"
(
    project_required_team_id serial NOT NULL,
    fk_project_id integer NOT NULL,
    fk_team_id integer NOT NULL, -- Refers to Teams.team_id, representing the required role/skillset
    required_count integer NOT NULL DEFAULT 1 CHECK (required_count > 0),
    PRIMARY KEY (project_required_team_id),
    CONSTRAINT fk_project_rt_project FOREIGN KEY (fk_project_id)
        REFERENCES "Flex-Crew-v1"."Projects" (project_id) ON DELETE CASCADE,
    CONSTRAINT fk_project_rt_team FOREIGN KEY (fk_team_id)
        REFERENCES "Flex-Crew-v1"."Teams" (team_id) ON DELETE CASCADE,
    UNIQUE (fk_project_id, fk_team_id) -- A project should not list the same team requirement multiple times
);

CREATE TABLE IF NOT EXISTS "Flex-Crew-v1"."Project_Employee_Assignments"
(
    assignment_id serial NOT NULL,
    fk_project_id integer NOT NULL,
    fk_employee_id integer NOT NULL,
    assigned_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    notes text,
    PRIMARY KEY (assignment_id),
    CONSTRAINT fk_project_ea_project FOREIGN KEY (fk_project_id)
        REFERENCES "Flex-Crew-v1"."Projects" (project_id) ON DELETE CASCADE,
    CONSTRAINT fk_project_ea_employee FOREIGN KEY (fk_employee_id)
        REFERENCES "Flex-Crew-v1"."Employees" (employee_id) ON DELETE CASCADE,
    UNIQUE (fk_project_id, fk_employee_id) -- An employee should generally not be assigned to the same project multiple times in the same capacity
);

-- Optional: Sample Data for new tables (Uncomment if you want to run this as part of the script)
INSERT INTO "Flex-Crew-v1"."Projects"(name, description, status, due_date)
VALUES
    ('Website Redesign Q3', 'Complete overhaul of the company website, focusing on UX and new branding.', 'PLANNING', '2024-09-30T23:59:59Z'),
    ('Mobile App Launch - Phase 1', 'Develop and launch the core features of the new iOS and Android mobile application.', 'OPEN', '2024-12-15T23:59:59Z'),
    ('API Security Audit', 'Perform a thorough security audit of all public-facing APIs.', 'OPEN', '2024-07-31T23:59:59Z');

INSERT INTO "Flex-Crew-v1"."Project_Required_Teams"(fk_project_id, fk_team_id, required_count)
VALUES
    (1, (SELECT team_id from "Flex-Crew-v1"."Teams" WHERE name = 'UI/UX Design Team'), 2),
    (1, (SELECT team_id from "Flex-Crew-v1"."Teams" WHERE name = 'Development Team'), 3),
    (2, (SELECT team_id from "Flex-Crew-v1"."Teams" WHERE name = 'Development Team'), 4),
    (2, (SELECT team_id from "Flex-Crew-v1"."Teams" WHERE name = 'Quality Assurance (QA) Team'), 2),
    (3, (SELECT team_id from "Flex-Crew-v1"."Teams" WHERE name = 'Security Team'), 2);

INSERT INTO "Flex-Crew-v1"."Project_Employee_Assignments"(fk_project_id, fk_employee_id)
VALUES
    (1, (SELECT employee_id from "Flex-Crew-v1"."Employees" WHERE email = 'design1@example.com')),
    (1, (SELECT employee_id from "Flex-Crew-v1"."Employees" WHERE email = 'dev1@example.com'));
